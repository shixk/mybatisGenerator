<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lenovo.dao.ReturnorderMapper" >
  <resultMap id="BaseResultMap" type="com.lenovo.entity.Returnorder" >
    <id column="ReturnOrderId" property="returnOrderId" jdbcType="INTEGER" />
    <result column="OrderId" property="orderId" jdbcType="INTEGER" />
    <result column="OrderSo" property="orderSo" jdbcType="VARCHAR" />
    <result column="ReturnOrderStatus" property="returnOrderStatus" jdbcType="SMALLINT" />
    <result column="ReturnOrderSo" property="returnOrderSo" jdbcType="VARCHAR" />
    <result column="ReturnReason" property="returnReason" jdbcType="VARCHAR" />
    <result column="WaybillCompany" property="waybillCompany" jdbcType="VARCHAR" />
    <result column="WaybillNo" property="waybillNo" jdbcType="VARCHAR" />
    <result column="Ramount" property="ramount" jdbcType="DECIMAL" />
    <result column="FlowStatus" property="flowStatus" jdbcType="SMALLINT" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ModifyTime" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ReturnOrderId, OrderId, OrderSo, ReturnOrderStatus, ReturnOrderSo, ReturnReason, 
    WaybillCompany, WaybillNo, Ramount, FlowStatus, CreateTime, ModifyTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lenovo.entity.ReturnorderCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ReturnOrder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ReturnOrder
    where ReturnOrderId = #{returnOrderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ReturnOrder
    where ReturnOrderId = #{returnOrderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lenovo.entity.ReturnorderCriteria" >
    delete from ReturnOrder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lenovo.entity.Returnorder" >
    insert into ReturnOrder (ReturnOrderId, OrderId, OrderSo, 
      ReturnOrderStatus, ReturnOrderSo, ReturnReason, 
      WaybillCompany, WaybillNo, Ramount, 
      FlowStatus, CreateTime, ModifyTime
      )
    values (#{returnOrderId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{orderSo,jdbcType=VARCHAR}, 
      #{returnOrderStatus,jdbcType=SMALLINT}, #{returnOrderSo,jdbcType=VARCHAR}, #{returnReason,jdbcType=VARCHAR}, 
      #{waybillCompany,jdbcType=VARCHAR}, #{waybillNo,jdbcType=VARCHAR}, #{ramount,jdbcType=DECIMAL}, 
      #{flowStatus,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lenovo.entity.Returnorder" >
    insert into ReturnOrder
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="returnOrderId != null" >
        ReturnOrderId,
      </if>
      <if test="orderId != null" >
        OrderId,
      </if>
      <if test="orderSo != null" >
        OrderSo,
      </if>
      <if test="returnOrderStatus != null" >
        ReturnOrderStatus,
      </if>
      <if test="returnOrderSo != null" >
        ReturnOrderSo,
      </if>
      <if test="returnReason != null" >
        ReturnReason,
      </if>
      <if test="waybillCompany != null" >
        WaybillCompany,
      </if>
      <if test="waybillNo != null" >
        WaybillNo,
      </if>
      <if test="ramount != null" >
        Ramount,
      </if>
      <if test="flowStatus != null" >
        FlowStatus,
      </if>
      <if test="createTime != null" >
        CreateTime,
      </if>
      <if test="modifyTime != null" >
        ModifyTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="returnOrderId != null" >
        #{returnOrderId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderSo != null" >
        #{orderSo,jdbcType=VARCHAR},
      </if>
      <if test="returnOrderStatus != null" >
        #{returnOrderStatus,jdbcType=SMALLINT},
      </if>
      <if test="returnOrderSo != null" >
        #{returnOrderSo,jdbcType=VARCHAR},
      </if>
      <if test="returnReason != null" >
        #{returnReason,jdbcType=VARCHAR},
      </if>
      <if test="waybillCompany != null" >
        #{waybillCompany,jdbcType=VARCHAR},
      </if>
      <if test="waybillNo != null" >
        #{waybillNo,jdbcType=VARCHAR},
      </if>
      <if test="ramount != null" >
        #{ramount,jdbcType=DECIMAL},
      </if>
      <if test="flowStatus != null" >
        #{flowStatus,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lenovo.entity.ReturnorderCriteria" resultType="java.lang.Integer" >
    select count(*) from ReturnOrder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ReturnOrder
    <set >
      <if test="record.returnOrderId != null" >
        ReturnOrderId = #{record.returnOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        OrderId = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderSo != null" >
        OrderSo = #{record.orderSo,jdbcType=VARCHAR},
      </if>
      <if test="record.returnOrderStatus != null" >
        ReturnOrderStatus = #{record.returnOrderStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.returnOrderSo != null" >
        ReturnOrderSo = #{record.returnOrderSo,jdbcType=VARCHAR},
      </if>
      <if test="record.returnReason != null" >
        ReturnReason = #{record.returnReason,jdbcType=VARCHAR},
      </if>
      <if test="record.waybillCompany != null" >
        WaybillCompany = #{record.waybillCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.waybillNo != null" >
        WaybillNo = #{record.waybillNo,jdbcType=VARCHAR},
      </if>
      <if test="record.ramount != null" >
        Ramount = #{record.ramount,jdbcType=DECIMAL},
      </if>
      <if test="record.flowStatus != null" >
        FlowStatus = #{record.flowStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null" >
        CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        ModifyTime = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ReturnOrder
    set ReturnOrderId = #{record.returnOrderId,jdbcType=INTEGER},
      OrderId = #{record.orderId,jdbcType=INTEGER},
      OrderSo = #{record.orderSo,jdbcType=VARCHAR},
      ReturnOrderStatus = #{record.returnOrderStatus,jdbcType=SMALLINT},
      ReturnOrderSo = #{record.returnOrderSo,jdbcType=VARCHAR},
      ReturnReason = #{record.returnReason,jdbcType=VARCHAR},
      WaybillCompany = #{record.waybillCompany,jdbcType=VARCHAR},
      WaybillNo = #{record.waybillNo,jdbcType=VARCHAR},
      Ramount = #{record.ramount,jdbcType=DECIMAL},
      FlowStatus = #{record.flowStatus,jdbcType=SMALLINT},
      CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      ModifyTime = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lenovo.entity.Returnorder" >
    update ReturnOrder
    <set >
      <if test="orderId != null" >
        OrderId = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderSo != null" >
        OrderSo = #{orderSo,jdbcType=VARCHAR},
      </if>
      <if test="returnOrderStatus != null" >
        ReturnOrderStatus = #{returnOrderStatus,jdbcType=SMALLINT},
      </if>
      <if test="returnOrderSo != null" >
        ReturnOrderSo = #{returnOrderSo,jdbcType=VARCHAR},
      </if>
      <if test="returnReason != null" >
        ReturnReason = #{returnReason,jdbcType=VARCHAR},
      </if>
      <if test="waybillCompany != null" >
        WaybillCompany = #{waybillCompany,jdbcType=VARCHAR},
      </if>
      <if test="waybillNo != null" >
        WaybillNo = #{waybillNo,jdbcType=VARCHAR},
      </if>
      <if test="ramount != null" >
        Ramount = #{ramount,jdbcType=DECIMAL},
      </if>
      <if test="flowStatus != null" >
        FlowStatus = #{flowStatus,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        ModifyTime = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ReturnOrderId = #{returnOrderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lenovo.entity.Returnorder" >
    update ReturnOrder
    set OrderId = #{orderId,jdbcType=INTEGER},
      OrderSo = #{orderSo,jdbcType=VARCHAR},
      ReturnOrderStatus = #{returnOrderStatus,jdbcType=SMALLINT},
      ReturnOrderSo = #{returnOrderSo,jdbcType=VARCHAR},
      ReturnReason = #{returnReason,jdbcType=VARCHAR},
      WaybillCompany = #{waybillCompany,jdbcType=VARCHAR},
      WaybillNo = #{waybillNo,jdbcType=VARCHAR},
      Ramount = #{ramount,jdbcType=DECIMAL},
      FlowStatus = #{flowStatus,jdbcType=SMALLINT},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      ModifyTime = #{modifyTime,jdbcType=TIMESTAMP}
    where ReturnOrderId = #{returnOrderId,jdbcType=INTEGER}
  </update>
</mapper>